/* Sourcecode generated by graphql-codegen. DO NOT EDIT! */
/* eslint-disable */
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core'
export type Maybe<T> = T | null
export type InputMaybe<T> = Maybe<T>
export type Exact<T extends { [key: string]: unknown }> = {
  [K in keyof T]: T[K]
}
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & {
  [SubKey in K]?: Maybe<T[SubKey]>
}
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & {
  [SubKey in K]: Maybe<T[SubKey]>
}
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string
  String: string
  Boolean: boolean
  Int: number
  Float: number
  AWSDate: any
  AWSDateTime: any
  AWSEmail: any
  AWSIPAddress: any
  AWSJSON: unknown
  AWSPhone: any
  AWSTime: any
  AWSTimestamp: any
  AWSURL: any
}

export type Mutation = {
  __typename?: 'Mutation'
  verifyIdentity?: Maybe<VerifiedIdentity>
  verifyIdentityDocument?: Maybe<VerifiedIdentity>
}

export type MutationVerifyIdentityArgs = {
  input?: InputMaybe<VerifyIdentityInput>
}

export type MutationVerifyIdentityDocumentArgs = {
  input?: InputMaybe<VerifyIdentityDocumentInput>
}

export type Query = {
  __typename?: 'Query'
  checkIdentityVerification?: Maybe<VerifiedIdentity>
  getSupportedCountriesForIdentityVerification?: Maybe<SupportedCountries>
}

export type SupportedCountries = {
  __typename?: 'SupportedCountries'
  countryList: Array<Scalars['String']>
}

export type VerifiedIdentity = {
  __typename?: 'VerifiedIdentity'
  canAttemptVerificationAgain: Scalars['Boolean']
  idScanUrl?: Maybe<Scalars['String']>
  owner: Scalars['String']
  requiredVerificationMethod?: Maybe<Scalars['String']>
  verificationMethod: Scalars['String']
  verified: Scalars['Boolean']
  verifiedAtEpochMs?: Maybe<Scalars['Float']>
}

export type VerifyIdentityDocumentInput = {
  backImageBase64: Scalars['String']
  country: Scalars['String']
  documentType: Scalars['String']
  imageBase64: Scalars['String']
  verificationMethod?: InputMaybe<Scalars['String']>
}

export type VerifyIdentityInput = {
  address: Scalars['String']
  city?: InputMaybe<Scalars['String']>
  country: Scalars['String']
  dateOfBirth: Scalars['String']
  firstName: Scalars['String']
  lastName: Scalars['String']
  postalCode: Scalars['String']
  state?: InputMaybe<Scalars['String']>
  verificationMethod?: InputMaybe<Scalars['String']>
}

export type CheckIdentityVerificationQueryVariables = Exact<{
  [key: string]: never
}>

export type CheckIdentityVerificationQuery = {
  __typename?: 'Query'
  checkIdentityVerification?: {
    __typename?: 'VerifiedIdentity'
    owner: string
    verified: boolean
    verifiedAtEpochMs?: number | null
    verificationMethod: string
    canAttemptVerificationAgain: boolean
    idScanUrl?: string | null
    requiredVerificationMethod?: string | null
  } | null
}

export type GetSupportedCountriesForIdentityVerificationQueryVariables = Exact<{
  [key: string]: never
}>

export type GetSupportedCountriesForIdentityVerificationQuery = {
  __typename?: 'Query'
  getSupportedCountriesForIdentityVerification?: {
    __typename?: 'SupportedCountries'
    countryList: Array<string>
  } | null
}

export type VerifyIdentityMutationVariables = Exact<{
  input: VerifyIdentityInput
}>

export type VerifyIdentityMutation = {
  __typename?: 'Mutation'
  verifyIdentity?: {
    __typename?: 'VerifiedIdentity'
    owner: string
    verified: boolean
    verifiedAtEpochMs?: number | null
    verificationMethod: string
    canAttemptVerificationAgain: boolean
    idScanUrl?: string | null
    requiredVerificationMethod?: string | null
  } | null
}

export type VerifyIdentityDocumentMutationVariables = Exact<{
  input: VerifyIdentityDocumentInput
}>

export type VerifyIdentityDocumentMutation = {
  __typename?: 'Mutation'
  verifyIdentityDocument?: {
    __typename?: 'VerifiedIdentity'
    owner: string
    verified: boolean
    verifiedAtEpochMs?: number | null
    verificationMethod: string
    canAttemptVerificationAgain: boolean
    requiredVerificationMethod?: string | null
  } | null
}

export const CheckIdentityVerificationDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'query',
      name: { kind: 'Name', value: 'CheckIdentityVerification' },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'checkIdentityVerification' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
                { kind: 'Field', name: { kind: 'Name', value: 'verified' } },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'verifiedAtEpochMs' },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'verificationMethod' },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'canAttemptVerificationAgain' },
                },
                { kind: 'Field', name: { kind: 'Name', value: 'idScanUrl' } },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'requiredVerificationMethod' },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CheckIdentityVerificationQuery,
  CheckIdentityVerificationQueryVariables
>
export const GetSupportedCountriesForIdentityVerificationDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'query',
      name: {
        kind: 'Name',
        value: 'GetSupportedCountriesForIdentityVerification',
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: {
              kind: 'Name',
              value: 'getSupportedCountriesForIdentityVerification',
            },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'countryList' } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  GetSupportedCountriesForIdentityVerificationQuery,
  GetSupportedCountriesForIdentityVerificationQueryVariables
>
export const VerifyIdentityDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'mutation',
      name: { kind: 'Name', value: 'VerifyIdentity' },
      variableDefinitions: [
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'input' },
          },
          type: {
            kind: 'NonNullType',
            type: {
              kind: 'NamedType',
              name: { kind: 'Name', value: 'VerifyIdentityInput' },
            },
          },
        },
      ],
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'verifyIdentity' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'input' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'input' },
                },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
                { kind: 'Field', name: { kind: 'Name', value: 'verified' } },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'verifiedAtEpochMs' },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'verificationMethod' },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'canAttemptVerificationAgain' },
                },
                { kind: 'Field', name: { kind: 'Name', value: 'idScanUrl' } },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'requiredVerificationMethod' },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  VerifyIdentityMutation,
  VerifyIdentityMutationVariables
>
export const VerifyIdentityDocumentDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'mutation',
      name: { kind: 'Name', value: 'VerifyIdentityDocument' },
      variableDefinitions: [
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'input' },
          },
          type: {
            kind: 'NonNullType',
            type: {
              kind: 'NamedType',
              name: { kind: 'Name', value: 'VerifyIdentityDocumentInput' },
            },
          },
        },
      ],
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'verifyIdentityDocument' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'input' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'input' },
                },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
                { kind: 'Field', name: { kind: 'Name', value: 'verified' } },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'verifiedAtEpochMs' },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'verificationMethod' },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'canAttemptVerificationAgain' },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'requiredVerificationMethod' },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  VerifyIdentityDocumentMutation,
  VerifyIdentityDocumentMutationVariables
>
